/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/regenie Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Minimal pipeline params (trimmed to GWAS needs)
params {
    // Core
    outdir             = 'results'
    publish_dir_mode   = 'copy'
    validate_params    = true
    monochrome_logs    = false
    mode               = null
    help               = false
    help_full          = false
    show_hidden        = false
    version            = false
    trace_report_suffix = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

    // Optional notifications
    email             = null
    email_on_fail     = null
    plaintext_email   = false
    hook_url          = null

    // GWAS/regenie inputs
    bgen              = null
    bgi               = null
    sample            = null
    bed               = null
    pgen              = null
    input_mode        = null
    phenoFile         = null
    covarFile         = null
    keep              = null
    remove            = null
    extract           = null
    exclude           = null

    // Phenotype/covariate options
    pheno_col_list    = null
    event_col_list    = null
    bt                = false
    t2e               = false
    chr_list          = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X'

    // Step 1/2 general
    bsize1            = 100
    bsize2            = 200
    firth             = true
    approx            = true
    spa               = false
    pThresh           = 0.05
    minMAC            = 5
    minINFO           = null
    test_mode         = null
    gz                = true
    no_split          = false
    lowmem            = true
    apply_rint        = false
    strict            = false
    write_samples     = false
    print_pheno       = false
    force_impute      = false

    // Split-L0 options
    split_l0_prefix   = null
    split_l0_n        = null
    l1_pheno_list     = null
    keep_l0           = false

    // Step 2 options
    sex_specific      = null
    af_cc             = false
    range             = null
    starting_block    = null
    htp               = null
    exact_p           = false
    use_null_firth    = null
    firth_se          = false
    force_qt          = false
    ignore_pred       = false
    niter             = null
    maxiter_null      = null
    maxstep_null      = null
    nauto             = null
    maxCatLevels      = null
    par_region        = null
    condition_list    = null
    condition_file    = null
    interaction       = null
    interaction_snp   = null
    interaction_file  = null
    interaction_file_reffirst = false
    use_prs           = false

    // Additional Step 1 options
    ref_first         = false
    covar_col_list    = null
    cat_covar_list    = null
    covar_exclude_list = null
    pheno_exclude_list = null
    cv                = null
    loocv             = false
    nb                = null
    minCaseCount      = null
    lowmem_prefix     = null
    force_step1       = false
    print_prs         = false
    write_null_firth  = false
    compute_all       = false
    use_relative_pred = true
    tpheno_file       = null
    tpheno_indexCol   = null
    tpheno_ignoreCols = null
    iid_only          = false

    // Resource overrides
    step1_cpus        = null
    step1_mem         = null
    step2_cpus        = null
    step2_mem         = null
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    // Analysis-mode presets
    binary {
        params.mode   = 'binary'
        params.bt     = true
        params.firth  = true
        params.approx = true
    }
    qt {
        params.mode   = 'qt'
        params.bt     = false
        params.t2e    = false
        params.firth  = false
        params.approx = false
        params.spa    = false
    }
    t2e {
        params.mode   = 't2e'
        params.t2e    = true
        params.firth  = true
        params.approx = true
    }
    // Genotype source presets
    bgen { params.input_mode = 'bgen' }
    bed  { params.input_mode = 'bed' }
    pgen { params.input_mode = 'pgen' }
    // Strategy presets
    nocv {
        params.cv   = null
        params.loocv = false
        params.nb   = null
    }
    splitl0 {
        // Provide a sensible default for parallelism; override as needed
        params.split_l0_n = params.split_l0_n ?: 4
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    gpu {
        docker.runOptions       = '-u $(id -u):$(id -g) --gpus all'
        apptainer.runOptions    = '--nv'
        singularity.runOptions  = '--nv'
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Remove iGenomes includes; not needed for GWAS

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf-core/regenie'
    contributors    = [
        // TODO nf-core: Update the field with the details of the contributors to your pipeline. New with Nextflow version 24.10.0
        [
            name: 'me',
            affiliation: '',
            email: '',
            github: '',
            contribution: [], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: ''
        ],
    ]
    homePage        = 'https://github.com/nf-core/regenie'
    description     = """Nextflow pipeline for REGENIE GWAS (Step1/Step2)"""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.10.5'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.4.2'
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    help {
        enabled = true
        command = "nextflow run CreRecombinase/nf-regenie -profile wave --params-file params.json --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  nf-core/regenie ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """
* Software dependencies are managed via Wave + Conda (envs/regenie.yml).
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
